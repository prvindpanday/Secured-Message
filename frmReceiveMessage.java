/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmReceiveMessage.java
 *
 * Created on Nov 1, 2012, 11:29:58 AM
 */

package multisecure;
import java.sql.*;
import java.math.*;
import java.io.*;

/**
 *
 * @author access
 */
public class frmReceiveMessage extends javax.swing.JFrame {
Connection con;
String str,str1;
    /** Creates new form frmReceiveMessage */
    public frmReceiveMessage() {
        initComponents();
        try
        {
Class.forName("com.mysql.jdbc.Driver");
con=DriverManager.getConnection("jdbc:mysql://localhost:3306/multisecure","root","");
getList();
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
    }
    void getList()
    {
   lst.removeAll();
        try
        {
            
         
           FileInputStream f=new FileInputStream("file.txt");
           DataInputStream in=new DataInputStream(f);
           BufferedReader br=new BufferedReader(new InputStreamReader(in));
           
           if((str=br.readLine())!=null)
           {
str1=str;
//System.out.println(str1);
           }
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from message where userid='"+str+"'");
            while(rs.next())
            {
                lst.add(rs.getString("encrypt_msg"));
                
                //lst.add(rs.getString("encrypt_msg"));
            }
        //}
           f.close();
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

      //  messageList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ((javax.persistence.Query)null).getResultList();
        jLabel1 = new javax.swing.JLabel();
        lst = new java.awt.List();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblM = new javax.swing.JLabel();
        lblN = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtOriginal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("Receive Message");

        lst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lstActionPerformed(evt);
            }
        });

        jButton1.setText("Decrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Private Key");

        lblM.setText("-");

        lblN.setText("-");

        jButton2.setText("Get Key");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Original Message :");

        txtOriginal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOriginalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lst, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblM)
                                .addGap(54, 54, 54)
                                .addComponent(lblN))
                            .addComponent(jButton1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(lst, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2)
                    .addComponent(lblM)
                    .addComponent(lblN))
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lstActionPerformed
        // TODO add your handling code here:



    }//GEN-LAST:event_lstActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from register where uname='"+str1+"'");
            while(rs.next())
            {
                lblM.setText(rs.getString("prikey_m"));
                lblN.setText(rs.getString("prikey_n"));
            }
            getList();
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtOriginalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOriginalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOriginalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String dhash=null;
        try
        {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from message where encrypt_msg='"+lst.getSelectedItem()+"'");
            while(rs.next()){
BigInteger[] ciphertext=null;
BigInteger n=null;
BigInteger d=null;
RSA rsa = new RSA(8);
n=rsa.getN();
d=rsa.getD();
ciphertext=rsa.encrypt(rs.getString("message"));
dhash=rsa.decrypt(ciphertext, d, n);
txtOriginal.setText(rs.getString("message"));
        }
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
		//String recoveredPlaintext = rsa.decrypt( ciphertext ,rsa.getD(),rsa.getN()) ;
 //txtOriginal.setText(dhash.toString());

		//System.out.println( "Recovered plaintext: [" + recoveredPlaintext + "]" ) ;

getList();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmReceiveMessage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblM;
    private javax.swing.JLabel lblN;
    private java.awt.List lst;
    //private java.util.List<multisecure.Message> messageList;
    private javax.swing.JTextField txtOriginal;
    // End of variables declaration//GEN-END:variables

}
